{"ast":null,"code":"import _slicedToArray from\"/home/dci/Desktop/movies-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* eslint-disable react/jsx-fragments */import React,{Fragment,useState,useEffect}from\"react\";import HeroImage from\"./HeroImage\";import LoadMore from\"./LoadMore\";import Grid from\"../layouts/Grid\";import MovieThumb from\"../shared/MovieThumb\";import Spinner from\"../shared/Spinner\";import SearchBar from\"../shared/SearchBar\";import NoImage from\"../../images/no_image.jpg\";import{API_URL,API_KEY,IMAGE_BASE_URL,BACKDROP_SIZE,POSTER_SIZE}from\"../../config\";import{useHomeFetch}from\"../../store/useHomeFetch\";var Home=function Home(){var _useHomeFetch=useHomeFetch(),_useHomeFetch2=_slicedToArray(_useHomeFetch,2),_useHomeFetch2$=_useHomeFetch2[0],state=_useHomeFetch2$.state,loading=_useHomeFetch2$.loading,error=_useHomeFetch2$.error,fetchMovie=_useHomeFetch2[1];var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];console.log(state);var loadMoreMovie=function loadMoreMovie(){var searchEndpoint=\"\".concat(API_URL,\"search/movie?api_key=\").concat(API_KEY,\"&query=\").concat(searchQuery,\"&page=\").concat(state.currentPage+1);var popularEndpoint=\"\".concat(API_URL,\"movie/popular?api_key=\").concat(API_KEY,\"&page=\").concat(state.currentPage+1);var apiUrl=searchQuery?searchEndpoint:popularEndpoint;fetchMovie(apiUrl);};var searchMovies=function searchMovies(query){var searchUrl=\"\".concat(API_URL,\"search/movie?api_key=\").concat(API_KEY,\"&query=\").concat(query);fetchMovie(searchUrl);};useEffect(function(){if(searchQuery===\"\"&&state.movies.length===0){fetchMovie(\"\".concat(API_URL,\"movie/popular?api_key=\").concat(API_KEY));}});if(error)return/*#__PURE__*/React.createElement(\"div\",null,\"somthing wrong\");return/*#__PURE__*/React.createElement(Fragment,null,!searchQuery&&/*#__PURE__*/React.createElement(HeroImage,{image:\"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(state.heroImage&&state.heroImage.backdrop_path),title:state.heroImage&&state.heroImage.original_title,text:state.heroImage&&state.heroImage.overview}),/*#__PURE__*/React.createElement(SearchBar,{search:searchMovies,setSearchQuery:setSearchQuery}),/*#__PURE__*/React.createElement(Grid,{header:searchQuery?\"Search Result\":\"Popular Movies\"},state.movies.length>0?state.movies.map(function(movie){return/*#__PURE__*/React.createElement(MovieThumb,{key:movie.id,clickable:true,image:movie.poster_path?\"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path):NoImage,movieId:movie.id,movieName:movie.original_title});}):/*#__PURE__*/React.createElement(\"div\",null,\"There is no results to show\")),loading&&/*#__PURE__*/React.createElement(Spinner,null),state.currentPage<state.totalPages&&!loading&&/*#__PURE__*/React.createElement(LoadMore,{text:\"load more\",action:loadMoreMovie}));};export default Home;","map":{"version":3,"sources":["/home/dci/Desktop/movies-test/src/components/screens/Home.js"],"names":["React","Fragment","useState","useEffect","HeroImage","LoadMore","Grid","MovieThumb","Spinner","SearchBar","NoImage","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","useHomeFetch","Home","state","loading","error","fetchMovie","searchQuery","setSearchQuery","console","log","loadMoreMovie","searchEndpoint","currentPage","popularEndpoint","apiUrl","searchMovies","query","searchUrl","movies","length","heroImage","backdrop_path","original_title","overview","map","movie","id","poster_path","totalPages"],"mappings":"oJAAA,wCACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,OACEC,OADF,CAEEC,OAFF,CAGEC,cAHF,CAIEC,aAJF,CAKEC,WALF,KAMO,cANP,CAOA,OAASC,YAAT,KAA6B,0BAA7B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,mBAC+BD,YAAY,EAD3C,kFACRE,KADQ,iBACRA,KADQ,CACDC,OADC,iBACDA,OADC,CACQC,KADR,iBACQA,KADR,CACiBC,UADjB,iCAEqBnB,QAAQ,CAAC,EAAD,CAF7B,wCAEVoB,WAFU,eAEGC,cAFH,eAGjBC,OAAO,CAACC,GAAR,CAAYP,KAAZ,EACA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,cAAc,WAAMhB,OAAN,iCAAqCC,OAArC,mBAAsDU,WAAtD,kBAClBJ,KAAK,CAACU,WAAN,CAAoB,CADF,CAApB,CAGA,GAAMC,CAAAA,eAAe,WAAMlB,OAAN,kCAAsCC,OAAtC,kBACnBM,KAAK,CAACU,WAAN,CAAoB,CADD,CAArB,CAIA,GAAME,CAAAA,MAAM,CAAGR,WAAW,CAAGK,cAAH,CAAoBE,eAA9C,CAEAR,UAAU,CAACS,MAAD,CAAV,CACD,CAXD,CAYA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,SAAS,WAAMtB,OAAN,iCAAqCC,OAArC,mBAAsDoB,KAAtD,CAAf,CACAX,UAAU,CAACY,SAAD,CAAV,CACD,CAHD,CAKA9B,SAAS,CAAC,UAAM,CACd,GAAImB,WAAW,GAAK,EAAhB,EAAsBJ,KAAK,CAACgB,MAAN,CAAaC,MAAb,GAAwB,CAAlD,CAAqD,CACnDd,UAAU,WAAIV,OAAJ,kCAAoCC,OAApC,EAAV,CACD,CACF,CAJQ,CAAT,CAMA,GAAIQ,KAAJ,CAAW,mBAAO,gDAAP,CAEX,mBACE,oBAAC,QAAD,MACG,CAACE,WAAD,eACC,oBAAC,SAAD,EACE,KAAK,WAAKT,cAAL,SAAsBC,aAAtB,SACHI,KAAK,CAACkB,SAAN,EAAmBlB,KAAK,CAACkB,SAAN,CAAgBC,aADhC,CADP,CAIE,KAAK,CAAEnB,KAAK,CAACkB,SAAN,EAAmBlB,KAAK,CAACkB,SAAN,CAAgBE,cAJ5C,CAKE,IAAI,CAAEpB,KAAK,CAACkB,SAAN,EAAmBlB,KAAK,CAACkB,SAAN,CAAgBG,QAL3C,EAFJ,cAUE,oBAAC,SAAD,EAAW,MAAM,CAAER,YAAnB,CAAiC,cAAc,CAAER,cAAjD,EAVF,cAWE,oBAAC,IAAD,EAAM,MAAM,CAAED,WAAW,CAAG,eAAH,CAAqB,gBAA9C,EACGJ,KAAK,CAACgB,MAAN,CAAaC,MAAb,CAAsB,CAAtB,CACCjB,KAAK,CAACgB,MAAN,CAAaM,GAAb,CAAiB,SAACC,KAAD,qBACf,oBAAC,UAAD,EACE,GAAG,CAAEA,KAAK,CAACC,EADb,CAEE,SAAS,KAFX,CAGE,KAAK,CACHD,KAAK,CAACE,WAAN,WACO9B,cADP,SACwBE,WADxB,SACsC0B,KAAK,CAACE,WAD5C,EAEIjC,OANR,CAQE,OAAO,CAAE+B,KAAK,CAACC,EARjB,CASE,SAAS,CAAED,KAAK,CAACH,cATnB,EADe,EAAjB,CADD,cAeC,6DAhBJ,CAXF,CA8BGnB,OAAO,eAAI,oBAAC,OAAD,MA9Bd,CA+BGD,KAAK,CAACU,WAAN,CAAoBV,KAAK,CAAC0B,UAA1B,EAAwC,CAACzB,OAAzC,eACC,oBAAC,QAAD,EAAU,IAAI,CAAC,WAAf,CAA2B,MAAM,CAAEO,aAAnC,EAhCJ,CADF,CAqCD,CAlED,CAoEA,cAAeT,CAAAA,IAAf","sourcesContent":["/* eslint-disable react/jsx-fragments */\nimport React, { Fragment, useState, useEffect } from \"react\"\nimport HeroImage from \"./HeroImage\"\nimport LoadMore from \"./LoadMore\"\nimport Grid from \"../layouts/Grid\"\nimport MovieThumb from \"../shared/MovieThumb\"\nimport Spinner from \"../shared/Spinner\"\nimport SearchBar from \"../shared/SearchBar\"\nimport NoImage from \"../../images/no_image.jpg\"\n\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n} from \"../../config\"\nimport { useHomeFetch } from \"../../store/useHomeFetch\"\n\nconst Home = () => {\n  const [{ state, loading, error }, fetchMovie] = useHomeFetch()\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  console.log(state)\n  const loadMoreMovie = () => {\n    const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${\n      state.currentPage + 1\n    }`\n    const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${\n      state.currentPage + 1\n    }`\n\n    const apiUrl = searchQuery ? searchEndpoint : popularEndpoint\n\n    fetchMovie(apiUrl)\n  }\n  const searchMovies = (query) => {\n    const searchUrl = `${API_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    fetchMovie(searchUrl)\n  }\n\n  useEffect(() => {\n    if (searchQuery === \"\" && state.movies.length === 0) {\n      fetchMovie(`${API_URL}movie/popular?api_key=${API_KEY}`)\n    }\n  })\n\n  if (error) return <div>somthing wrong</div>\n\n  return (\n    <Fragment>\n      {!searchQuery && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n            state.heroImage && state.heroImage.backdrop_path\n          }`}\n          title={state.heroImage && state.heroImage.original_title}\n          text={state.heroImage && state.heroImage.overview}\n        />\n      )}\n      <SearchBar search={searchMovies} setSearchQuery={setSearchQuery} />\n      <Grid header={searchQuery ? \"Search Result\" : \"Popular Movies\"}>\n        {state.movies.length > 0 ? (\n          state.movies.map((movie) => (\n            <MovieThumb\n              key={movie.id}\n              clickable\n              image={\n                movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : NoImage\n              }\n              movieId={movie.id}\n              movieName={movie.original_title}\n            />\n          ))\n        ) : (\n          <div>There is no results to show</div>\n        )}\n      </Grid>\n      {loading && <Spinner />}\n      {state.currentPage < state.totalPages && !loading && (\n        <LoadMore text=\"load more\" action={loadMoreMovie} />\n      )}\n    </Fragment>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}