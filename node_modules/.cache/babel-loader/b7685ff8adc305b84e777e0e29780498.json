{"ast":null,"code":"var _jsxFileName = \"/home/dci/PROJECTS/MovieApp/src/components/screens/Home.js\";\n\n/* eslint-disable react/jsx-fragments */\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport HeroImage from \"./HeroImage\";\nimport LoadMore from \"./LoadMore\";\nimport Grid from \"../layouts/Grid\";\nimport MovieThumb from \"../shared/MovieThumb\";\nimport Spinner from \"../shared/Spinner\";\nimport SearchBar from \"../shared/SearchBar\";\nimport NoImage from \"../../images/no_image.jpg\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from \"../../config\";\nimport { useHomeFetch } from \"../../store/useHomeFetch\";\n\nconst Home = () => {\n  const [{\n    state,\n    loading,\n    error\n  }, fetchMovie] = useHomeFetch();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  console.log(state);\n\n  const loadMoreMovie = () => {\n    const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${state.currentPage + 1}`;\n    const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${state.currentPage + 1}`;\n    const apiUrl = searchQuery ? searchEndpoint : popularEndpoint;\n    fetchMovie(apiUrl);\n  };\n\n  const searchMovies = query => {\n    const searchUrl = `${API_URL}search/movie?api_key=${API_KEY}&query=${query}`;\n    fetchMovie(searchUrl);\n  };\n\n  useEffect(() => {\n    if (searchQuery === \"\" && state.movies.length === 0) {\n      fetchMovie(`${API_URL}movie/popular?api_key=${API_KEY}`);\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"somthing wrong\");\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, !searchQuery && /*#__PURE__*/React.createElement(HeroImage, {\n    image: `${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.heroImage && state.heroImage.backdrop_path}`,\n    title: state.heroImage && state.heroImage.original_title,\n    text: state.heroImage && state.heroImage.overview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    search: searchMovies,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    header: searchQuery ? \"Search Result\" : \"Popular Movies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, state.movies.length > 0 ? state.movies.map(movie => /*#__PURE__*/React.createElement(MovieThumb, {\n    key: movie.id,\n    clickable: true,\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n    movieId: movie.id,\n    movieName: movie.original_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"There is no results to show\")), loading && /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }), state.currentPage < state.totalPages && !loading && /*#__PURE__*/React.createElement(LoadMore, {\n    text: \"load more\",\n    action: loadMoreMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/dci/PROJECTS/MovieApp/src/components/screens/Home.js"],"names":["React","Fragment","useState","useEffect","HeroImage","LoadMore","Grid","MovieThumb","Spinner","SearchBar","NoImage","API_URL","API_KEY","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","useHomeFetch","Home","state","loading","error","fetchMovie","searchQuery","setSearchQuery","console","log","loadMoreMovie","searchEndpoint","currentPage","popularEndpoint","apiUrl","searchMovies","query","searchUrl","movies","length","heroImage","backdrop_path","original_title","overview","map","movie","id","poster_path","totalPages"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-fragments */\nimport React, { Fragment, useState, useEffect } from \"react\"\nimport HeroImage from \"./HeroImage\"\nimport LoadMore from \"./LoadMore\"\nimport Grid from \"../layouts/Grid\"\nimport MovieThumb from \"../shared/MovieThumb\"\nimport Spinner from \"../shared/Spinner\"\nimport SearchBar from \"../shared/SearchBar\"\nimport NoImage from \"../../images/no_image.jpg\"\n\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n} from \"../../config\"\nimport { useHomeFetch } from \"../../store/useHomeFetch\"\n\nconst Home = () => {\n  const [{ state, loading, error }, fetchMovie] = useHomeFetch()\n  const [searchQuery, setSearchQuery] = useState(\"\")\n  console.log(state)\n  const loadMoreMovie = () => {\n    const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${\n      state.currentPage + 1\n    }`\n    const popularEndpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${\n      state.currentPage + 1\n    }`\n\n    const apiUrl = searchQuery ? searchEndpoint : popularEndpoint\n\n    fetchMovie(apiUrl)\n  }\n  const searchMovies = (query) => {\n    const searchUrl = `${API_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    fetchMovie(searchUrl)\n  }\n\n  useEffect(() => {\n    if (searchQuery === \"\" && state.movies.length === 0) {\n      fetchMovie(`${API_URL}movie/popular?api_key=${API_KEY}`)\n    }\n  })\n\n  if (error) return <div>somthing wrong</div>\n\n  return (\n    <Fragment>\n      {!searchQuery && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n            state.heroImage && state.heroImage.backdrop_path\n          }`}\n          title={state.heroImage && state.heroImage.original_title}\n          text={state.heroImage && state.heroImage.overview}\n        />\n      )}\n      <SearchBar search={searchMovies} setSearchQuery={setSearchQuery} />\n      <Grid header={searchQuery ? \"Search Result\" : \"Popular Movies\"}>\n        {state.movies.length > 0 ? (\n          state.movies.map((movie) => (\n            <MovieThumb\n              key={movie.id}\n              clickable\n              image={\n                movie.poster_path\n                  ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                  : NoImage\n              }\n              movieId={movie.id}\n              movieName={movie.original_title}\n            />\n          ))\n        ) : (\n          <div>There is no results to show</div>\n        )}\n      </Grid>\n      {loading && <Spinner />}\n      {state.currentPage < state.totalPages && !loading && (\n        <LoadMore text=\"load more\" action={loadMoreMovie} />\n      )}\n    </Fragment>\n  )\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}